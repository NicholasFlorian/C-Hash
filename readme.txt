Nicholas Florian
0962782

1 - description 
This assignment was to create a spell checking with a dictionary stored in a hash

2 - instruction
In the command line cd to the main folder of this assignment, then run “make”
to create the code, run ./main <dictionaryFile.txt> to execute it.

3 - Assumptions
Assumed that hash

4 - Limitation
Adding to many words might fill up the hash

5 - Hash Collision
For my Hash I handled collisions by moving one index over (even through ‘key’) 
until it found a verified location. It used recursion to keep trying to insert 
itself into a correct spot. Then when verifying it checked the location generated 
by the data against the data being searched to get to the right collision spot, 
also implementing recursion.

I generated keys based on the first few letters of the word and through ascii. 
The Ascii was converted to be case insensitive where a = 0, and z = 25. The key 
was generated based on the sum of all the values. Using just the first few 
letters helped prevent Mod % tablesize issues where the key generated was to 
big and ended up producing an index that was itself.

The hash function is generated by taking the mod of the table size to key 
(tableSize % key), I originally had it the other way around but it was producing 
keys and indexes with the same values which wouldn’t be a proper hash.